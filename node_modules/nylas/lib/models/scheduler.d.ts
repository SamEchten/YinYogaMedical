import RestfulModel, { SaveCallback } from './restful-model';
import { Attribute } from './attributes';
import NylasConnection from '../nylas-connection';
import Model from './model';
import Calendar from './calendar';
export declare type SchedulerUploadImageResponse = {
    filename: string;
    originalFilename: string;
    publicUrl: string;
    signedUrl: string;
};
export declare type SchedulerAvailableCalendarsProperties = {
    id: string;
    name: string;
    email: string;
    calendars: Calendar[];
};
export declare class SchedulerAvailableCalendars extends Model implements SchedulerAvailableCalendarsProperties {
    id: string;
    name: string;
    email: string;
    calendars: Calendar[];
    static attributes: Record<string, Attribute>;
    private _connection?;
    constructor(props?: SchedulerAvailableCalendarsProperties);
    get connection(): NylasConnection | undefined;
    fromJSON(json: Record<string, unknown>, connection?: NylasConnection): this;
}
export declare type SchedulerAppearanceProperties = {
    color?: string;
    companyName?: string;
    logo?: string;
    privacyPolicyRedirect?: string;
    showAutoschedule?: boolean;
    showNylasBranding?: boolean;
    showTimezoneOptions?: boolean;
    showWeekView?: boolean;
    submitText?: string;
    thankYouRedirect?: string;
    thankYouText?: string;
    thankYouTextSecondary?: string;
};
export declare class SchedulerAppearance extends Model implements SchedulerAppearanceProperties {
    color?: string;
    companyName?: string;
    logo?: string;
    privacyPolicyRedirect?: string;
    showAutoschedule?: boolean;
    showNylasBranding?: boolean;
    showTimezoneOptions?: boolean;
    showWeekView?: boolean;
    submitText?: string;
    thankYouRedirect?: string;
    thankYouText?: string;
    thankYouTextSecondary?: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: SchedulerAppearanceProperties);
}
export declare type SchedulerBookingAdditionalFieldsProperties = {
    dropdownOptions?: string[];
    label?: string;
    multiSelectOptions?: string[];
    name?: string;
    order?: number;
    pattern?: string;
    required?: boolean;
    type?: string;
};
export declare class SchedulerBookingAdditionalFields extends Model implements SchedulerBookingAdditionalFieldsProperties {
    dropdownOptions?: string[];
    label?: string;
    multiSelectOptions?: string[];
    name?: string;
    order?: number;
    pattern?: string;
    required?: boolean;
    type?: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: SchedulerBookingAdditionalFieldsProperties);
}
export declare type SchedulerBookingOpeningHoursProperties = {
    accountId?: string;
    days?: string[];
    end?: string;
    start?: string;
};
export declare class SchedulerBookingOpeningHours extends Model implements SchedulerBookingOpeningHoursProperties {
    accountId?: string;
    days?: string[];
    end?: string;
    start?: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: SchedulerBookingOpeningHoursProperties);
}
export declare type SchedulerBookingProperties = {
    additionalFields?: SchedulerBookingAdditionalFieldsProperties[];
    additionalGuestsHidden?: boolean;
    availableDaysInFuture?: number;
    calendarInviteToGuests?: boolean;
    cancellationPolicy?: string;
    confirmationEmailsToGuests?: boolean;
    confirmationEmailToHost?: boolean;
    confirmationMethod?: string;
    minBookingNotice?: number;
    minBuffer?: number;
    minCancellationNotice?: number;
    nameFieldHidden?: boolean;
    openingHours?: SchedulerBookingOpeningHoursProperties[];
    schedulingMethod?: string;
};
export declare class SchedulerBooking extends Model implements SchedulerBookingProperties {
    additionalFields?: SchedulerBookingAdditionalFields[];
    additionalGuestsHidden?: boolean;
    availableDaysInFuture?: number;
    calendarInviteToGuests?: boolean;
    cancellationPolicy?: string;
    confirmationEmailsToGuests?: boolean;
    confirmationEmailToHost?: boolean;
    confirmationMethod?: string;
    minBookingNotice?: number;
    minBuffer?: number;
    minCancellationNotice?: number;
    nameFieldHidden?: boolean;
    openingHours?: SchedulerBookingOpeningHours[];
    schedulingMethod?: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: SchedulerBookingProperties);
}
export declare type SchedulerRemindersProperties = {
    deliveryMethod?: string;
    deliveryRecipient?: string;
    emailSubject?: string;
    timeBeforeEvent?: number;
    webhookUrl?: string;
};
export declare class SchedulerReminders extends Model implements SchedulerRemindersProperties {
    deliveryMethod?: string;
    deliveryRecipient?: string;
    emailSubject?: string;
    timeBeforeEvent?: number;
    webhookUrl?: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: SchedulerRemindersProperties);
}
export declare type SchedulerConfigProperties = {
    appearance?: SchedulerAppearanceProperties;
    booking?: SchedulerBookingProperties;
    calendarIds?: {
        [accountId: string]: {
            availability?: string[];
            booking?: string;
        };
    };
    event?: {
        duration?: number;
        capacity?: number;
        location?: string;
        title?: string;
    };
    expireAfter?: {
        date?: number;
        uses?: number;
    };
    locale?: string;
    localeForGuests?: string;
    reminders?: SchedulerRemindersProperties[];
    timezone?: string;
};
export declare class SchedulerConfig extends Model implements SchedulerConfigProperties {
    appearance?: SchedulerAppearanceProperties;
    booking?: SchedulerBookingProperties;
    calendarIds?: {
        [accountId: string]: {
            availability?: string[];
            booking?: string;
        };
    };
    event?: {
        duration?: number;
        capacity?: number;
        location?: string;
        title?: string;
    };
    expireAfter?: {
        date?: number;
        uses?: number;
    };
    disableEmails?: boolean;
    locale?: string;
    localeForGuests?: string;
    reminders?: SchedulerRemindersProperties[];
    timezone?: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: SchedulerConfigProperties);
}
export declare type SchedulerProperties = {
    accessTokens?: string[];
    appClientId?: string;
    appOrganizationId?: number;
    config?: SchedulerConfig;
    editToken?: string;
    name?: string;
    slug?: string;
    createdAt?: Date;
    modifiedAt?: Date;
};
export default class Scheduler extends RestfulModel implements SchedulerProperties {
    accessTokens?: string[];
    appClientId?: string;
    appOrganizationId?: number;
    config?: SchedulerConfig;
    editToken?: string;
    name?: string;
    slug?: string;
    createdAt?: Date;
    modifiedAt?: Date;
    static collectionName: string;
    static attributes: Record<string, Attribute>;
    constructor(connection: NylasConnection, props?: SchedulerProperties);
    save(params?: {} | SaveCallback, callback?: SaveCallback): Promise<this>;
    getAvailableCalendars(): Promise<SchedulerAvailableCalendars[]>;
    uploadImage(contentType: string, objectName: string): Promise<SchedulerUploadImageResponse>;
}
