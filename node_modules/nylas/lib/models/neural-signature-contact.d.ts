import { Attribute } from './attributes';
import Contact from './contact';
import Model from './model';
import NylasConnection from '../nylas-connection';
declare type LinkProperties = {
    description?: string;
    url?: string;
};
declare class Link extends Model implements LinkProperties {
    description: string;
    url: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: LinkProperties);
}
declare type NameProperties = {
    firstName?: string;
    lastName?: string;
};
declare class Name extends Model implements NameProperties {
    firstName: string;
    lastName: string;
    static attributes: Record<string, Attribute>;
    constructor(props?: NameProperties);
}
export declare type NeuralSignatureContactProperties = {
    jobTitles?: string[];
    links?: Link[];
    phoneNumbers?: string[];
    emails?: string[];
    names?: Name[];
};
export default class NeuralSignatureContact extends Model implements NeuralSignatureContactProperties {
    jobTitles?: string[];
    links?: Link[];
    phoneNumbers?: string[];
    emails?: string[];
    names?: Name[];
    static attributes: Record<string, Attribute>;
    constructor(props?: NeuralSignatureContactProperties);
    toJSON(): Record<string, unknown>;
    toContactObject(connection: NylasConnection): Contact;
}
export {};
