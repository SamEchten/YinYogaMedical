import Message, { MessageProperties } from './message';
import RestfulModel, { SaveCallback } from './restful-model';
import { Attribute } from './attributes';
import EmailParticipant, { EmailParticipantProperties } from './email-participant';
import Folder, { Label, FolderProperties } from './folder';
import NylasConnection from '../nylas-connection';
export declare type ThreadProperties = {
    subject: string;
    participants: EmailParticipantProperties[];
    lastMessageTimestamp: Date;
    lastMessageReceivedTimestamp: Date;
    firstMessageTimestamp: Date;
    messageIds: string[];
    snippet: string;
    unread: boolean;
    starred: boolean;
    version: string;
    hasAttachments?: boolean;
    lastMessageSentTimestamp?: Date;
    folders?: FolderProperties[];
    labels?: FolderProperties[];
    draftIds?: string[];
    messages?: MessageProperties[];
    drafts?: MessageProperties[];
};
export default class Thread extends RestfulModel implements ThreadProperties {
    subject: string;
    participants: EmailParticipant[];
    lastMessageTimestamp: Date;
    lastMessageReceivedTimestamp: Date;
    firstMessageTimestamp: Date;
    messageIds: string[];
    snippet: string;
    unread: boolean;
    starred: boolean;
    version: string;
    hasAttachments?: boolean;
    lastMessageSentTimestamp?: Date;
    folders?: Folder[];
    labels?: Label[];
    draftIds?: string[];
    messages?: Message[];
    drafts?: Message[];
    static collectionName: string;
    static attributes: Record<string, Attribute>;
    constructor(connection: NylasConnection, props?: ThreadProperties);
    saveRequestBody(): Record<string, unknown>;
    save(params?: {} | SaveCallback, callback?: SaveCallback): Promise<this>;
}
