"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var attributes_1 = __importDefault(require("./attributes"));
var scheduler_time_slot_1 = __importDefault(require("./scheduler-time-slot"));
var model_1 = __importDefault(require("./model"));
var SchedulerBookingConfirmation = /** @class */ (function (_super) {
    __extends(SchedulerBookingConfirmation, _super);
    function SchedulerBookingConfirmation(props) {
        var _this = _super.call(this) || this;
        _this.initAttributes(props);
        return _this;
    }
    SchedulerBookingConfirmation.attributes = {
        id: attributes_1.default.Number({
            modelKey: 'id',
        }),
        accountId: attributes_1.default.String({
            modelKey: 'accountId',
            jsonKey: 'account_id',
        }),
        additionalFieldValues: attributes_1.default.Object({
            modelKey: 'additionalFieldValues',
            jsonKey: 'additional_field_values',
        }),
        calendarEventId: attributes_1.default.String({
            modelKey: 'calendarEventId',
            jsonKey: 'calendar_event_id',
        }),
        calendarId: attributes_1.default.String({
            modelKey: 'calendarId',
            jsonKey: 'calendar_id',
        }),
        editHash: attributes_1.default.String({
            modelKey: 'editHash',
            jsonKey: 'edit_hash',
        }),
        startTime: attributes_1.default.DateTime({
            modelKey: 'startTime',
            jsonKey: 'start_time',
        }),
        endTime: attributes_1.default.DateTime({
            modelKey: 'endTime',
            jsonKey: 'end_time',
        }),
        isConfirmed: attributes_1.default.Boolean({
            modelKey: 'isConfirmed',
            jsonKey: 'is_confirmed',
        }),
        location: attributes_1.default.String({
            modelKey: 'location',
        }),
        recipientEmail: attributes_1.default.String({
            modelKey: 'recipientEmail',
            jsonKey: 'recipient_email',
        }),
        recipientLocale: attributes_1.default.String({
            modelKey: 'recipientLocale',
            jsonKey: 'recipient_locale',
        }),
        recipientName: attributes_1.default.String({
            modelKey: 'recipientName',
            jsonKey: 'recipient_name',
        }),
        recipientTz: attributes_1.default.String({
            modelKey: 'recipientTz',
            jsonKey: 'recipient_tz',
        }),
        title: attributes_1.default.String({
            modelKey: 'title',
        }),
    };
    return SchedulerBookingConfirmation;
}(model_1.default));
exports.SchedulerBookingConfirmation = SchedulerBookingConfirmation;
var SchedulerBookingRequest = /** @class */ (function (_super) {
    __extends(SchedulerBookingRequest, _super);
    function SchedulerBookingRequest(props) {
        var _this = _super.call(this) || this;
        _this.initAttributes(props);
        return _this;
    }
    /*
    * The booking endpoint requires additional_values and additional_emails
      to exist regardless if they are empty or not
    */
    SchedulerBookingRequest.prototype.toJSON = function (enforceReadOnly) {
        var json = _super.prototype.toJSON.call(this, enforceReadOnly);
        if (!this.additionalEmails) {
            json['additional_emails'] = [];
        }
        if (!this.additionalValues) {
            json['additional_values'] = {};
        }
        return json;
    };
    SchedulerBookingRequest.attributes = {
        additionalEmails: attributes_1.default.StringList({
            modelKey: 'additionalEmails',
            jsonKey: 'additional_emails',
        }),
        additionalValues: attributes_1.default.Object({
            modelKey: 'additionalValues',
            jsonKey: 'additional_values',
        }),
        email: attributes_1.default.String({
            modelKey: 'email',
        }),
        locale: attributes_1.default.String({
            modelKey: 'locale',
        }),
        name: attributes_1.default.String({
            modelKey: 'name',
        }),
        pageHostname: attributes_1.default.String({
            modelKey: 'pageHostname',
            jsonKey: 'page_hostname',
        }),
        replacesBookingHash: attributes_1.default.String({
            modelKey: 'replacesBookingHash',
            jsonKey: 'replaces_booking_hash',
        }),
        slot: attributes_1.default.Object({
            modelKey: 'slot',
            itemClass: scheduler_time_slot_1.default,
        }),
        timezone: attributes_1.default.String({
            modelKey: 'timezone',
        }),
    };
    return SchedulerBookingRequest;
}(model_1.default));
exports.default = SchedulerBookingRequest;
