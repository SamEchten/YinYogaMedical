import Message, { MessageProperties } from './message';
import { Attribute } from './attributes';
import { SaveCallback } from './restful-model';
import NylasConnection from '../nylas-connection';
export declare type SendCallback = (err: Error | null, json?: Record<string, any>) => void;
export declare type DraftProperties = MessageProperties & {
    rawMime?: string;
    replyToMessageId?: string;
    version?: number;
    fileIdsToAttach?: string[];
};
export default class Draft extends Message implements DraftProperties {
    rawMime?: string;
    replyToMessageId?: string;
    version?: number;
    fileIdsToAttach?: string[];
    static collectionName: string;
    static attributes: Record<string, Attribute>;
    constructor(connection: NylasConnection, props?: DraftProperties);
    fileIds(): (string | undefined)[];
    toJSON(enforceReadOnly?: boolean): Record<string, any>;
    save(params?: {} | SaveCallback, callback?: SaveCallback): Promise<this>;
    saveRequestBody(): Record<string, unknown>;
    deleteRequestBody(params?: Record<string, unknown>): Record<string, unknown>;
    toString(): string;
    send(trackingArg?: Record<string, any> | SendCallback | null, callbackArg?: SendCallback | Record<string, any> | null): Promise<Message>;
}
