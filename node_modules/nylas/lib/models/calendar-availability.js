"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __importDefault(require("./model"));
var attributes_1 = __importDefault(require("./attributes"));
var free_busy_1 = require("./free-busy");
var RoundRobin;
(function (RoundRobin) {
    RoundRobin["MaxAvailability"] = "max-availability";
    RoundRobin["MaxFairness"] = "max-fairness";
})(RoundRobin = exports.RoundRobin || (exports.RoundRobin = {}));
var Days;
(function (Days) {
    Days[Days["Monday"] = 0] = "Monday";
    Days[Days["Tuesday"] = 1] = "Tuesday";
    Days[Days["Wednesday"] = 2] = "Wednesday";
    Days[Days["Thursday"] = 3] = "Thursday";
    Days[Days["Friday"] = 4] = "Friday";
    Days[Days["Saturday"] = 5] = "Saturday";
    Days[Days["Sunday"] = 6] = "Sunday";
})(Days = exports.Days || (exports.Days = {}));
var OpenHours = /** @class */ (function (_super) {
    __extends(OpenHours, _super);
    function OpenHours(props) {
        var _this = _super.call(this) || this;
        _this.objectType = 'open_hours';
        _this.emails = [];
        _this.days = [];
        _this.timezone = '';
        _this.start = '';
        _this.end = '';
        _this.initAttributes(props);
        return _this;
    }
    OpenHours.attributes = {
        objectType: attributes_1.default.String({
            modelKey: 'objectType',
            jsonKey: 'object_type',
        }),
        emails: attributes_1.default.StringList({
            modelKey: 'emails',
        }),
        days: attributes_1.default.NumberList({
            modelKey: 'days',
        }),
        timezone: attributes_1.default.String({
            modelKey: 'timezone',
        }),
        start: attributes_1.default.String({
            modelKey: 'start',
        }),
        end: attributes_1.default.String({
            modelKey: 'end',
        }),
    };
    return OpenHours;
}(model_1.default));
exports.OpenHours = OpenHours;
var CalendarConsecutiveAvailability = /** @class */ (function (_super) {
    __extends(CalendarConsecutiveAvailability, _super);
    function CalendarConsecutiveAvailability(props) {
        var _this = _super.call(this) || this;
        _this.emails = [];
        _this.startTime = 0;
        _this.endTime = 0;
        _this.initAttributes(props);
        return _this;
    }
    CalendarConsecutiveAvailability.attributes = {
        emails: attributes_1.default.StringList({
            modelKey: 'emails',
        }),
        startTime: attributes_1.default.Number({
            modelKey: 'startTime',
            jsonKey: 'start_time',
        }),
        endTime: attributes_1.default.Number({
            modelKey: 'endTime',
            jsonKey: 'end_time',
        }),
    };
    return CalendarConsecutiveAvailability;
}(model_1.default));
exports.CalendarConsecutiveAvailability = CalendarConsecutiveAvailability;
var CalendarAvailability = /** @class */ (function (_super) {
    __extends(CalendarAvailability, _super);
    function CalendarAvailability(props) {
        var _this = _super.call(this) || this;
        _this.object = 'availability';
        _this.timeSlots = [];
        _this.initAttributes(props);
        return _this;
    }
    CalendarAvailability.attributes = {
        timeSlots: attributes_1.default.Collection({
            modelKey: 'timeSlots',
            jsonKey: 'time_slots',
            itemClass: free_busy_1.TimeSlot,
        }),
        order: attributes_1.default.StringList({
            modelKey: 'order',
        }),
    };
    return CalendarAvailability;
}(model_1.default));
exports.default = CalendarAvailability;
