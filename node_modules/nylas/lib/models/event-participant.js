"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var attributes_1 = __importDefault(require("./attributes"));
var model_1 = __importDefault(require("./model"));
var EventParticipant = /** @class */ (function (_super) {
    __extends(EventParticipant, _super);
    function EventParticipant(props) {
        var _this = _super.call(this) || this;
        _this.email = '';
        _this.initAttributes(props);
        return _this;
    }
    EventParticipant.prototype.toJSON = function (enforceReadOnly) {
        var json = _super.prototype.toJSON.call(this, enforceReadOnly);
        if (!json['name']) {
            json['name'] = json['email'];
        }
        return json;
    };
    EventParticipant.attributes = {
        name: attributes_1.default.String({
            modelKey: 'name',
        }),
        email: attributes_1.default.String({
            modelKey: 'email',
        }),
        comment: attributes_1.default.String({
            modelKey: 'comment',
        }),
        phoneNumber: attributes_1.default.String({
            modelKey: 'phoneNumber',
            jsonKey: 'phone_number',
        }),
        status: attributes_1.default.String({
            modelKey: 'status',
            readOnly: true,
        }),
    };
    return EventParticipant;
}(model_1.default));
exports.default = EventParticipant;
