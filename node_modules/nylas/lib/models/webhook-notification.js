"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __importDefault(require("./model"));
var attributes_1 = __importDefault(require("./attributes"));
var LinkClick = /** @class */ (function (_super) {
    __extends(LinkClick, _super);
    function LinkClick(props) {
        var _this = _super.call(this) || this;
        _this.id = 0;
        _this.ip = '';
        _this.userAgent = '';
        _this.timestamp = new Date();
        _this.initAttributes(props);
        return _this;
    }
    LinkClick.attributes = {
        id: attributes_1.default.Number({
            modelKey: 'id',
        }),
        ip: attributes_1.default.String({
            modelKey: 'ip',
        }),
        userAgent: attributes_1.default.String({
            modelKey: 'userAgent',
            jsonKey: 'user_agent',
        }),
        timestamp: attributes_1.default.DateTime({
            modelKey: 'timestamp',
        }),
        linkIndex: attributes_1.default.Number({
            modelKey: 'linkIndex',
            jsonKey: 'link_index',
        }),
    };
    return LinkClick;
}(model_1.default));
exports.LinkClick = LinkClick;
var LinkClickCount = /** @class */ (function (_super) {
    __extends(LinkClickCount, _super);
    function LinkClickCount(props) {
        var _this = _super.call(this) || this;
        _this.url = '';
        _this.count = 0;
        _this.initAttributes(props);
        return _this;
    }
    LinkClickCount.attributes = {
        url: attributes_1.default.String({
            modelKey: 'url',
        }),
        count: attributes_1.default.Number({
            modelKey: 'count',
        }),
    };
    return LinkClickCount;
}(model_1.default));
exports.LinkClickCount = LinkClickCount;
var MessageTrackingData = /** @class */ (function (_super) {
    __extends(MessageTrackingData, _super);
    function MessageTrackingData(props) {
        var _this = _super.call(this) || this;
        _this.messageId = '';
        _this.payload = '';
        _this.senderAppId = 0;
        _this.initAttributes(props);
        return _this;
    }
    MessageTrackingData.attributes = {
        messageId: attributes_1.default.String({
            modelKey: 'messageId',
            jsonKey: 'message_id',
        }),
        payload: attributes_1.default.String({
            modelKey: 'payload',
        }),
        senderAppId: attributes_1.default.Number({
            modelKey: 'senderAppId',
            jsonKey: 'sender_app_id',
        }),
        replyToMessageId: attributes_1.default.String({
            modelKey: 'replyToMessageId',
            jsonKey: 'reply_to_message_id',
        }),
        timestamp: attributes_1.default.DateTime({
            modelKey: 'timestamp',
        }),
        threadId: attributes_1.default.String({
            modelKey: 'threadId',
            jsonKey: 'thread_id',
        }),
        fromSelf: attributes_1.default.Boolean({
            modelKey: 'fromSelf',
            jsonKey: 'from_self',
        }),
        count: attributes_1.default.Number({
            modelKey: 'count',
        }),
        linkData: attributes_1.default.Collection({
            modelKey: 'linkData',
            jsonKey: 'link_data',
            itemClass: LinkClickCount,
        }),
        recents: attributes_1.default.Collection({
            modelKey: 'recents',
            itemClass: LinkClick,
        }),
    };
    return MessageTrackingData;
}(model_1.default));
exports.MessageTrackingData = MessageTrackingData;
var WebhookObjectAttributes = /** @class */ (function (_super) {
    __extends(WebhookObjectAttributes, _super);
    function WebhookObjectAttributes(props) {
        var _this = _super.call(this) || this;
        _this.initAttributes(props);
        return _this;
    }
    WebhookObjectAttributes.attributes = {
        action: attributes_1.default.String({
            modelKey: 'action',
        }),
        jobStatusId: attributes_1.default.String({
            modelKey: 'jobStatusId',
            jsonKey: 'job_status_id',
        }),
        threadId: attributes_1.default.String({
            modelKey: 'threadId',
            jsonKey: 'thread_id',
        }),
        receivedDate: attributes_1.default.DateTime({
            modelKey: 'receivedDate',
            jsonKey: 'received_date',
        }),
    };
    return WebhookObjectAttributes;
}(model_1.default));
exports.WebhookObjectAttributes = WebhookObjectAttributes;
var WebhookObjectData = /** @class */ (function (_super) {
    __extends(WebhookObjectData, _super);
    function WebhookObjectData(props) {
        var _this = _super.call(this) || this;
        _this.id = '';
        _this.accountId = '';
        _this.namespaceId = '';
        _this.object = '';
        _this.initAttributes(props);
        return _this;
    }
    WebhookObjectData.attributes = {
        id: attributes_1.default.String({
            modelKey: 'id',
        }),
        accountId: attributes_1.default.String({
            modelKey: 'accountId',
            jsonKey: 'account_id',
        }),
        namespaceId: attributes_1.default.String({
            modelKey: 'namespaceId',
            jsonKey: 'namespace_id',
        }),
        object: attributes_1.default.String({
            modelKey: 'object',
        }),
        metadata: attributes_1.default.Object({
            modelKey: 'metadata',
            itemClass: MessageTrackingData,
        }),
        objectAttributes: attributes_1.default.Object({
            modelKey: 'objectAttributes',
            jsonKey: 'attributes',
            itemClass: WebhookObjectAttributes,
        }),
    };
    return WebhookObjectData;
}(model_1.default));
exports.WebhookObjectData = WebhookObjectData;
var WebhookDelta = /** @class */ (function (_super) {
    __extends(WebhookDelta, _super);
    function WebhookDelta(props) {
        var _this = _super.call(this) || this;
        _this.date = new Date();
        _this.object = '';
        _this.type = '';
        _this.objectData = new WebhookObjectData();
        _this.initAttributes(props);
        return _this;
    }
    WebhookDelta.attributes = {
        date: attributes_1.default.DateTime({
            modelKey: 'date',
        }),
        object: attributes_1.default.String({
            modelKey: 'object',
        }),
        type: attributes_1.default.String({
            modelKey: 'type',
        }),
        objectData: attributes_1.default.Object({
            modelKey: 'objectData',
            jsonKey: 'object_data',
            itemClass: WebhookObjectData,
        }),
    };
    return WebhookDelta;
}(model_1.default));
exports.WebhookDelta = WebhookDelta;
var WebhookNotification = /** @class */ (function (_super) {
    __extends(WebhookNotification, _super);
    function WebhookNotification(props) {
        var _this = _super.call(this) || this;
        _this.deltas = [];
        _this.initAttributes(props);
        return _this;
    }
    WebhookNotification.attributes = {
        deltas: attributes_1.default.Collection({
            modelKey: 'deltas',
            itemClass: WebhookDelta,
        }),
    };
    return WebhookNotification;
}(model_1.default));
exports.default = WebhookNotification;
