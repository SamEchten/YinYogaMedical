"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var attributes_1 = __importDefault(require("./attributes"));
var model_1 = __importDefault(require("./model"));
var EventConferencingDetails = /** @class */ (function (_super) {
    __extends(EventConferencingDetails, _super);
    function EventConferencingDetails(props) {
        var _this = _super.call(this) || this;
        _this.initAttributes(props);
        return _this;
    }
    EventConferencingDetails.attributes = {
        meetingCode: attributes_1.default.String({
            modelKey: 'meetingCode',
            jsonKey: 'meeting_code',
        }),
        phone: attributes_1.default.StringList({
            modelKey: 'phone',
        }),
        password: attributes_1.default.String({
            modelKey: 'password',
        }),
        pin: attributes_1.default.String({
            modelKey: 'pin',
        }),
        url: attributes_1.default.String({
            modelKey: 'url',
        }),
    };
    return EventConferencingDetails;
}(model_1.default));
exports.EventConferencingDetails = EventConferencingDetails;
var EventConferencing = /** @class */ (function (_super) {
    __extends(EventConferencing, _super);
    function EventConferencing(props) {
        var _this = _super.call(this) || this;
        _this.provider = '';
        _this.initAttributes(props);
        return _this;
    }
    EventConferencing.attributes = {
        details: attributes_1.default.Object({
            modelKey: 'details',
            itemClass: EventConferencingDetails,
        }),
        provider: attributes_1.default.String({
            modelKey: 'provider',
        }),
        autocreate: attributes_1.default.Object({
            modelKey: 'autocreate',
        }),
    };
    return EventConferencing;
}(model_1.default));
exports.default = EventConferencing;
