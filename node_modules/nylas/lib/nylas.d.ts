import NylasConnection from './nylas-connection';
import ManagementAccount from './models/management-account';
import Account from './models/account';
import Connect from './models/connect';
import RestfulModelCollection from './models/restful-model-collection';
import ManagementModelCollection from './models/management-model-collection';
import Webhook from './models/webhook';
import { AuthenticateUrlConfig, NylasConfig } from './config';
import AccessToken from './models/access-token';
import ApplicationDetails, { ApplicationDetailsProperties } from './models/application-details';
declare class Nylas {
    static clientId: string;
    static get clientSecret(): string;
    static set clientSecret(newClientSecret: string);
    static get apiServer(): string | null;
    static set apiServer(newApiServer: string | null);
    static accounts: ManagementModelCollection<ManagementAccount> | RestfulModelCollection<Account>;
    static connect: Connect;
    static webhooks: ManagementModelCollection<Webhook>;
    static config(config: NylasConfig): Nylas;
    static clientCredentials(): boolean;
    static with(accessToken: string): NylasConnection;
    static application(options?: ApplicationDetailsProperties): Promise<ApplicationDetails>;
    static exchangeCodeForToken(code: string, callback?: (error: Error | null, accessToken?: string) => void): Promise<AccessToken>;
    static urlForAuthentication(options: AuthenticateUrlConfig): string;
    /**
     * Revoke a single access token
     * @param accessToken The access token to revoke
     */
    static revoke(accessToken: string): Promise<void>;
}
export = Nylas;
