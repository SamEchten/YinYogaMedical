import TransformingNetworkClient from '../../../communication/TransformingNetworkClient';
import Callback from '../../../types/Callback';
import Helper from '../../Helper';
import Shipment from '../../orders/shipments/Shipment';
import Payment from '../Payment';
import Capture from './Capture';
import { CaptureData } from './data';
export default class CaptureHelper extends Helper<CaptureData, Capture> {
    protected readonly links: CaptureData['_links'];
    protected readonly embedded: Capture['_embedded'];
    constructor(networkClient: TransformingNetworkClient, links: CaptureData['_links'], embedded: Capture['_embedded']);
    /**
     * Returns the payment the capture was created for.
     *
     * @since 3.6.0
     */
    getPayment(): Promise<Payment>;
    getPayment(callback: Callback<Array<Payment>>): void;
    /**
     * Returns the shipment that triggered the capture to be created.
     *
     * @since 3.6.0
     */
    getShipment(): Promise<Shipment> | Promise<undefined>;
    getShipment(callback: Callback<Shipment | undefined>): void;
}
