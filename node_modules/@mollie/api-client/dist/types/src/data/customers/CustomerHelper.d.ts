import TransformingNetworkClient from '../../communication/TransformingNetworkClient';
import Callback from '../../types/Callback';
import Helper from '../Helper';
import Payment from '../payments/Payment';
import Subscription from '../subscription/Subscription';
import Customer, { CustomerData } from './Customer';
import Mandate from './mandates/Mandate';
export default class CustomerHelper extends Helper<CustomerData, Customer> {
    protected readonly links: CustomerData['_links'];
    constructor(networkClient: TransformingNetworkClient, links: CustomerData['_links']);
    /**
     * Returns the mandates belonging to the customer.
     *
     * @since 3.6.0
     */
    getMandates(): Promise<Array<Mandate>>;
    getMandates(callback: Callback<Array<Mandate>>): void;
    /**
     * Returns the subscriptions belonging to the customer.
     *
     * @since 3.6.0
     */
    getSubscriptions(): Promise<Array<Subscription>>;
    getSubscriptions(callback: Callback<Array<Subscription>>): void;
    /**
     * Returns the payments belonging to the customer.
     *
     * @since 3.6.0
     */
    getPayments(): Promise<Array<Payment>>;
    getPayments(callback: Callback<Array<Payment>>): void;
}
