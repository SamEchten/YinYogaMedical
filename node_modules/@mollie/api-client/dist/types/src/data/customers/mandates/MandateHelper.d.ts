import TransformingNetworkClient from '../../../communication/TransformingNetworkClient';
import Callback from '../../../types/Callback';
import Helper from '../../Helper';
import Customer from '../Customer';
import { MandateData } from './data';
import Mandate from './Mandate';
export default class MandateHelper extends Helper<MandateData, Mandate> {
    protected readonly links: MandateData['_links'];
    constructor(networkClient: TransformingNetworkClient, links: MandateData['_links']);
    /**
     * Returns whether the mandate is valid.
     *
     * @deprecated Use `mandate.status == MandateStatus.valid` instead.
     */
    isValid(this: MandateData): boolean;
    /**
     * Returns the payments belonging to the customer.
     *
     * @since 3.6.0
     */
    getCustomer(): Promise<Customer>;
    getCustomer(callback: Callback<Customer>): void;
}
