import TransformingNetworkClient from '../../communication/TransformingNetworkClient';
import Callback from '../../types/Callback';
import Helper from '../Helper';
import Organization from '../organizations/Organizations';
import { OnboardingData } from './data';
import Onboarding from './Onboarding';
export default class OnboardingHelper extends Helper<OnboardingData, Onboarding> {
    protected readonly links: OnboardingData['_links'];
    constructor(networkClient: TransformingNetworkClient, links: OnboardingData['_links']);
    /**
     * @deprecated Use `onboarding.status == OnboardingStatus.needsData` instead.
     */
    needsData(this: OnboardingData): boolean;
    /**
     * @deprecated Use `onboarding.status == OnboardingStatus.inReview` instead.
     */
    isInReview(this: OnboardingData): boolean;
    /**
     * @deprecated Use `onboarding.status == OnboardingStatus.completed` instead.
     */
    isCompleted(this: OnboardingData): boolean;
    /**
     * Returns the organization.
     *
     * @since 3.6.0
     */
    getOrganization(): Promise<Organization>;
    getOrganization(callback: Callback<Organization>): void;
}
