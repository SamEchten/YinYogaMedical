/**
 * `ToIntegerOrInfinity` (see https://tc39.es/ecma262/#sec-tointegerorinfinity) combined with a range check.
 *
 * In short: returns the passed input converted to an integer (rounded down) â€’ unless the passed input converts to
 * `NaN`, in which case `0` is returned; or the input is negative, in which case a `RangeError` is thrown.
 */
export default function convertToNonNegativeInteger(input: unknown): number;
