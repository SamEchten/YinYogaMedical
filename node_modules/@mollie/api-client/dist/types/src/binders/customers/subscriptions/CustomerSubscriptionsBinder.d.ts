import TransformingNetworkClient from '../../../communication/TransformingNetworkClient';
import List from '../../../data/list/List';
import { SubscriptionData } from '../../../data/subscription/data';
import Subscription from '../../../data/subscription/Subscription';
import Callback from '../../../types/Callback';
import InnerBinder from '../../InnerBinder';
import { CancelParameters, CreateParameters, GetParameters, ListParameters, UpdateParameters } from './parameters';
export default class CustomerSubscriptionsBinder extends InnerBinder<SubscriptionData, Subscription> {
    protected readonly networkClient: TransformingNetworkClient;
    constructor(networkClient: TransformingNetworkClient);
    /**
     * A subscription can be canceled any time by calling `DELETE` on the resource endpoint.
     *
     * @since 1.3.2
     * @deprecated Use `cancel` instead.
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/cancel-subscription
     */
    delete: CustomerSubscriptionsBinder['cancel'];
    /**
     * Retrieve all subscriptions of a customer.
     *
     * @since 1.3.2
     * @deprecated Use `page` instead.
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/list-subscriptions
     */
    all: CustomerSubscriptionsBinder['page'];
    /**
     * Retrieve all subscriptions of a customer.
     *
     * @since 3.0.0
     * @deprecated Use `page` instead.
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/list-subscriptions
     */
    list: CustomerSubscriptionsBinder['page'];
    /**
     * With subscriptions, you can schedule recurring payments to take place at regular intervals.
     *
     * For example, by simply specifying an `amount` and an `interval`, you can create an endless subscription to charge a monthly fee, until you cancel the subscription.
     *
     * Or, you could use the `times` parameter to only charge a limited number of times, for example to split a big transaction in multiple parts.
     *
     * A few example usages:
     *
     * -   `amount[currency]="EUR" amount[value]="5.00" interval="2 weeks"` Your consumer will be charged €5 once every two weeks.
     * -   `amount[currency]="EUR" amount[value]="20.00" interval="1 day" times=5` Your consumer will be charged €20 every day, for five consecutive days.
     * -   `amount[currency]="EUR" amount[value]="10.00" interval="1 month" startDate="2018-04-30"` Your consumer will be charged €10 on the last day of each month, starting in April 2018.
     *
     * @since 1.3.2
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/create-subscription
     */
    create(parameters: CreateParameters): Promise<Subscription>;
    create(parameters: CreateParameters, callback: Callback<Subscription>): void;
    /**
     * Retrieve a subscription by its ID and its customer's ID.
     *
     * @since 1.3.2
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/get-subscription
     */
    get(id: string, parameters: GetParameters): Promise<Subscription>;
    get(id: string, parameters: GetParameters, callback: Callback<Subscription>): void;
    /**
     * Retrieve all subscriptions of a customer.
     *
     * @since 3.0.0
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/list-subscriptions
     */
    page(parameters: ListParameters): Promise<List<Subscription>>;
    page(parameters: ListParameters, callback: Callback<List<Subscription>>): void;
    /**
     * Retrieve all subscriptions of a customer.
     *
     * @since 3.6.0
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/list-subscriptions
     */
    iterate(parameters: ListParameters): import("../../../plumbing/HelpfulIterator").default<Subscription>;
    /**
     * Some fields of a subscription can be updated by calling `PATCH` on the resource endpoint. Each field is optional.
     *
     * You cannot update a canceled subscription.
     *
     * @since 2.0.0
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/update-subscription
     */
    update(id: string, parameters: UpdateParameters): Promise<Subscription>;
    update(id: string, parameters: UpdateParameters, callback: Callback<Subscription>): void;
    /**
     * A subscription can be canceled any time by calling `DELETE` on the resource endpoint.
     *
     * @since 1.3.2
     * @see https://docs.mollie.com/reference/v2/subscriptions-api/cancel-subscription
     */
    cancel(id: string, parameters: CancelParameters): Promise<Subscription>;
    cancel(id: string, parameters: CancelParameters, callback: Callback<Subscription>): void;
}
