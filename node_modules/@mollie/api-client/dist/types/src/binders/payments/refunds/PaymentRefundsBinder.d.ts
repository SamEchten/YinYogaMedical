import TransformingNetworkClient from '../../../communication/TransformingNetworkClient';
import List from '../../../data/list/List';
import { RefundData } from '../../../data/refunds/data';
import Refund from '../../../data/refunds/Refund';
import HelpfulIterator from '../../../plumbing/HelpfulIterator';
import Callback from '../../../types/Callback';
import InnerBinder from '../../InnerBinder';
import { CancelParameters, CreateParameters, GetParameters, ListParameters } from './parameters';
export default class PaymentRefundsBinder extends InnerBinder<RefundData, Refund> {
    protected readonly networkClient: TransformingNetworkClient;
    constructor(networkClient: TransformingNetworkClient);
    /**
     * Retrieve a list of all of your refunds.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 1.1.1
     * @deprecated Use `page` instead.
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    all: PaymentRefundsBinder['page'];
    /**
     * Retrieve a list of all of your refunds.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.0.0
     * @deprecated Use `page` instead.
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    list: PaymentRefundsBinder['page'];
    /**
     * For certain payment methods, like iDEAL, the underlying banking system will delay refunds until the next day. Until that time, refunds may be canceled manually in the [Mollie
     * Dashboard](https://www.mollie.com/dashboard), or programmatically by using this endpoint.
     *
     * A refund can only be canceled while its `status` field is either `queued` or `pending`. See the Get refund endpoint for more information.
     *
     * @deprecated Use `cancel` instead.
     * @see https://docs.mollie.com/reference/v2/refunds-api/cancel-payment-refund
     */
    delete: PaymentRefundsBinder['cancel'];
    /**
     * Creates a refund for a specific payment. The refunded amount is credited to your customer usually either via a bank transfer or by refunding the amount to your customer's credit card.
     *
     * @since 1.1.1
     * @see https://docs.mollie.com/reference/v2/refunds-api/create-payment-refund
     */
    create(parameters: CreateParameters): Promise<Refund>;
    create(parameters: CreateParameters, callback: Callback<Refund>): void;
    /**
     * Retrieve a single payment refund by its ID. Note the payment ID is required as well.
     *
     * If you do not know the original payment's ID, you can use the /reference/v2/refunds-api/list-refunds.
     *
     * @since 1.1.1
     * @see https://docs.mollie.com/reference/v2/refunds-api/get-payment-refund
     */
    get(id: string, parameters: GetParameters): Promise<Refund>;
    get(id: string, parameters: GetParameters, callback: Callback<Refund>): void;
    /**
     * Retrieve a list of all of your refunds.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.0.0
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    page(parameters: ListParameters): Promise<List<Refund>>;
    page(parameters: ListParameters, callback: Callback<List<Refund>>): void;
    /**
     * Retrieve a list of all of your refunds.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.6.0
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    iterate(parameters: Omit<ListParameters, 'limit'>): HelpfulIterator<Refund>;
    /**
     * For certain payment methods, like iDEAL, the underlying banking system will delay refunds until the next day. Until that time, refunds may be canceled manually in the [Mollie
     * Dashboard](https://www.mollie.com/dashboard), or programmatically by using this endpoint.
     *
     * A refund can only be canceled while its `status` field is either `queued` or `pending`. See the Get refund endpoint for more information.
     *
     * @since 1.1.1
     * @see https://docs.mollie.com/reference/v2/refunds-api/cancel-payment-refund
     */
    cancel(id: string, parameters: CancelParameters): Promise<true>;
    cancel(id: string, parameters: CancelParameters, callback: Callback<Promise<true>>): void;
}
