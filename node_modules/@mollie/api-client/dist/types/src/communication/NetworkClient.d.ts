/// <reference types="node" />
import { SecureContextOptions } from 'tls';
import { AxiosInstance } from 'axios';
import List from '../data/list/List';
import Options from '../Options';
import HelpfulIterator from '../plumbing/HelpfulIterator';
/**
 * This class is essentially a wrapper around axios. It simplifies communication with the Mollie API over the network.
 */
export default class NetworkClient {
    protected readonly axiosInstance: AxiosInstance;
    constructor({ apiKey, accessToken, versionStrings, apiEndpoint, caCertificates, libraryVersion, nodeVersion, ...axiosOptions }: Options & {
        caCertificates?: SecureContextOptions['ca'];
        libraryVersion: string;
        nodeVersion: string;
    });
    post<R>(relativePath: string, data: any, query?: Record<string, any>): Promise<R | true>;
    get<R>(relativePath: string, query?: Record<string, any>): Promise<R>;
    list<R>(relativePath: string, type: string, query?: Record<string, any>): Promise<R[] & Pick<List<R>, 'links' | 'count'>>;
    listPlain<R>(relativePath: string, binderName: string, query?: Record<string, any>): Promise<R[]>;
    iterate<R>(...firstPageArguments: Parameters<NetworkClient['list']>): HelpfulIterator<R>;
    patch<R>(relativePath: string, data: any): Promise<R>;
    delete<R>(relativePath: string, context?: any): Promise<R | true>;
}
